<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.springbooteasycode.dao.CommentDao">

    <resultMap type="com.easy.springbooteasycode.entity.Comment" id="CommentMap">
        <result property="id" column="ID" jdbcType="INTEGER"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="parentsId" column="PARENTS_ID" jdbcType="INTEGER"/>
        <result property="articleId" column="ARTICLE_ID" jdbcType="INTEGER"/>
        <result property="commentLevel" column="COMMENT_LEVEL" jdbcType="INTEGER"/>
        <result property="status" column="STATUS" jdbcType="INTEGER"/>
        <result property="likes" column="likes" jdbcType="INTEGER"/>
        <result property="replayComment" column="REPLAY_COMMENT" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CommentMap">
        select
          ID, CONTENT, PARENTS_ID, ARTICLE_ID, COMMENT_LEVEL, STATUS, likes, REPLAY_COMMENT
        from comment
        where ID = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CommentMap">
        select
          ID, CONTENT, PARENTS_ID, ARTICLE_ID, COMMENT_LEVEL, STATUS, likes, REPLAY_COMMENT
        from comment
        <where>
            <if test="id != null">
                and ID = #{id}
            </if>
            <if test="content != null and content != ''">
                and CONTENT = #{content}
            </if>
            <if test="parentsId != null">
                and PARENTS_ID = #{parentsId}
            </if>
            <if test="articleId != null">
                and ARTICLE_ID = #{articleId}
            </if>
            <if test="commentLevel != null">
                and COMMENT_LEVEL = #{commentLevel}
            </if>
            <if test="status != null">
                and STATUS = #{status}
            </if>
            <if test="likes != null">
                and likes = #{likes}
            </if>
            <if test="replayComment != null">
                and REPLAY_COMMENT = #{replayComment}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from comment
        <where>
            <if test="id != null">
                and ID = #{id}
            </if>
            <if test="content != null and content != ''">
                and CONTENT = #{content}
            </if>
            <if test="parentsId != null">
                and PARENTS_ID = #{parentsId}
            </if>
            <if test="articleId != null">
                and ARTICLE_ID = #{articleId}
            </if>
            <if test="commentLevel != null">
                and COMMENT_LEVEL = #{commentLevel}
            </if>
            <if test="status != null">
                and STATUS = #{status}
            </if>
            <if test="likes != null">
                and likes = #{likes}
            </if>
            <if test="replayComment != null">
                and REPLAY_COMMENT = #{replayComment}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into comment(CONTENT, PARENTS_ID, ARTICLE_ID, COMMENT_LEVEL, STATUS, likes, REPLAY_COMMENT)
        values (#{content}, #{parentsId}, #{articleId}, #{commentLevel}, #{status}, #{likes}, #{replayComment})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into comment(CONTENT, PARENTS_ID, ARTICLE_ID, COMMENT_LEVEL, STATUS, likes, REPLAY_COMMENT)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.content}, #{entity.parentsId}, #{entity.articleId}, #{entity.commentLevel}, #{entity.status}, #{entity.likes}, #{entity.replayComment})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into comment(CONTENT, PARENTS_ID, ARTICLE_ID, COMMENT_LEVEL, STATUS, likes, REPLAY_COMMENT)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.content}, #{entity.parentsId}, #{entity.articleId}, #{entity.commentLevel}, #{entity.status}, #{entity.likes}, #{entity.replayComment})
        </foreach>
        on duplicate key update
        CONTENT = values(CONTENT),
        PARENTS_ID = values(PARENTS_ID),
        ARTICLE_ID = values(ARTICLE_ID),
        COMMENT_LEVEL = values(COMMENT_LEVEL),
        STATUS = values(STATUS),
        likes = values(likes),
        REPLAY_COMMENT = values(REPLAY_COMMENT)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update comment
        <set>
            <if test="content != null and content != ''">
                CONTENT = #{content},
            </if>
            <if test="parentsId != null">
                PARENTS_ID = #{parentsId},
            </if>
            <if test="articleId != null">
                ARTICLE_ID = #{articleId},
            </if>
            <if test="commentLevel != null">
                COMMENT_LEVEL = #{commentLevel},
            </if>
            <if test="status != null">
                STATUS = #{status},
            </if>
            <if test="likes != null">
                likes = #{likes},
            </if>
            <if test="replayComment != null">
                REPLAY_COMMENT = #{replayComment},
            </if>
        </set>
        where ID = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from comment where ID = #{id}
    </delete>

</mapper>

